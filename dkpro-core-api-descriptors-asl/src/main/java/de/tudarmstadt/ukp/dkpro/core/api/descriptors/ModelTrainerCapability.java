/*
 * Copyright 2012
 * Ubiquitous Knowledge Processing (UKP) Lab
 * Technische Universit√§t Darmstadt
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.tudarmstadt.ukp.dkpro.core.api.descriptors;

import de.tudarmstadt.ukp.dkpro.core.api.parameter.ComponentParameters;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * This annotation should be used in order to provide meta data to trainer classes, for example, the
 * {@code OpenNlpTokenTrainer} provides the information that this class can consume CAS and produces a NLP model
 * for the annotator class {@code OpenNlpSegmenter}.
 */
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
public @interface ModelTrainerCapability {

    /**
     * E.g. {@code "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence"}
     *
     * @return
     */
    String output();

    /**
     * The parameter name of the model, created through the trainer, used by the annotator class.
     *
     * @return
     */
    String annotatorParamModelLocationName() default ComponentParameters.PARAM_MODEL_LOCATION;

    /**
     * The parameter name of the model target location which is generated by the trainer class.
     *
     * @return
     */
    String trainerParamModelTargetLocationName() default ComponentParameters.PARAM_TARGET_LOCATION;

}
